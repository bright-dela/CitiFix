# Generated by Django 5.2.7 on 2025-10-19 17:05

import django.core.validators
import django.db.models.deletion
import incidents.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("users", "0002_authorityprofile_reputation_score_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Incident",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "incident_type",
                    models.CharField(
                        choices=[
                            ("fire", "Fire"),
                            ("medical", "Medical Emergency"),
                            ("crime", "Crime"),
                            ("accident", "Accident"),
                            ("disaster", "Natural Disaster"),
                            ("other", "Other"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Verification"),
                            ("verified", "Verified"),
                            ("assigned", "Assigned to Authority"),
                            ("in_progress", "In Progress"),
                            ("resolved", "Resolved"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        max_length=30,
                    ),
                ),
                ("description", models.TextField(max_length=500)),
                (
                    "location_latitude",
                    models.DecimalField(decimal_places=8, max_digits=10),
                ),
                (
                    "location_longitude",
                    models.DecimalField(decimal_places=8, max_digits=11),
                ),
                ("location_address", models.TextField(blank=True)),
                ("district", models.CharField(blank=True, max_length=100)),
                ("region", models.CharField(blank=True, max_length=100)),
                (
                    "trust_score",
                    models.DecimalField(decimal_places=2, default=0.5, max_digits=3),
                ),
                ("is_anonymous", models.BooleanField(default=False)),
                ("verified_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "media_access_level",
                    models.CharField(
                        choices=[
                            ("none", "None"),
                            ("basic", "Basic"),
                            ("premium", "Premium"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                (
                    "reporter",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="incidents",
                        to="users.citizenprofile",
                    ),
                ),
                (
                    "verified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="verified_incidents",
                        to="users.authorityprofile",
                    ),
                ),
            ],
            options={
                "db_table": "incidents",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Assignment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("assigned", "Assigned"),
                            ("en_route", "En Route"),
                            ("arrived", "Arrived"),
                            ("in_progress", "In Progress"),
                            ("resolved", "Resolved"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="assigned",
                        max_length=20,
                    ),
                ),
                (
                    "distance_km",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                ("estimated_arrival_min", models.IntegerField(blank=True, null=True)),
                ("notes", models.TextField(blank=True)),
                ("assigned_at", models.DateTimeField(auto_now_add=True)),
                ("arrived_at", models.DateTimeField(blank=True, null=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "assigned_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_incidents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "authority",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assignments",
                        to="users.authorityprofile",
                    ),
                ),
                (
                    "incident",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assignments",
                        to="incidents.incident",
                    ),
                ),
            ],
            options={
                "db_table": "assignments",
                "ordering": ["-assigned_at"],
            },
        ),
        migrations.CreateModel(
            name="IncidentMedia",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "media_type",
                    models.CharField(
                        choices=[("photo", "Photo"), ("video", "Video")], max_length=10
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to=incidents.models.incident_media_path,
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["jpg", "jpeg", "png", "mp4", "mov"]
                            )
                        ],
                    ),
                ),
                ("file_size", models.IntegerField(help_text="File size in bytes")),
                ("captured_at", models.DateTimeField(blank=True, null=True)),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=10, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=11, null=True
                    ),
                ),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                (
                    "incident",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="media_files",
                        to="incidents.incident",
                    ),
                ),
            ],
            options={
                "db_table": "incident_media",
            },
        ),
        migrations.CreateModel(
            name="IncidentUpdate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "update_type",
                    models.CharField(
                        choices=[
                            ("status_change", "Status Change"),
                            ("assignment", "Assignment"),
                            ("comment", "Comment"),
                            ("verification", "Verification"),
                        ],
                        max_length=20,
                    ),
                ),
                ("old_status", models.CharField(blank=True, max_length=50)),
                ("new_status", models.CharField(blank=True, max_length=50)),
                ("message", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "incident",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="updates",
                        to="incidents.incident",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "incident_updates",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="MediaAccess",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "access_type",
                    models.CharField(
                        choices=[("view", "View"), ("download", "Download")],
                        max_length=10,
                    ),
                ),
                ("accessed_at", models.DateTimeField(auto_now_add=True)),
                (
                    "incident",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="incidents.incident",
                    ),
                ),
                (
                    "media_file",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="incidents.incidentmedia",
                    ),
                ),
                (
                    "media_house",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="users.mediahouseprofile",
                    ),
                ),
            ],
            options={
                "db_table": "media_access_log",
                "ordering": ["-accessed_at"],
            },
        ),
        migrations.AddIndex(
            model_name="incident",
            index=models.Index(
                fields=["incident_type"], name="incidents_inciden_994021_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="incident",
            index=models.Index(
                fields=["severity"], name="incidents_severit_667686_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="incident",
            index=models.Index(fields=["status"], name="incidents_status_9db31b_idx"),
        ),
        migrations.AddIndex(
            model_name="incident",
            index=models.Index(
                fields=["created_at"], name="incidents_created_bc994b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="assignment",
            index=models.Index(
                fields=["incident"], name="assignments_inciden_6f88b7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="assignment",
            index=models.Index(
                fields=["authority"], name="assignments_authori_66592d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="assignment",
            index=models.Index(fields=["status"], name="assignments_status_7bfe3b_idx"),
        ),
        migrations.AddIndex(
            model_name="incidentmedia",
            index=models.Index(
                fields=["incident"], name="incident_me_inciden_2fe74d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="incidentmedia",
            index=models.Index(
                fields=["media_type"], name="incident_me_media_t_a397d8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="incidentupdate",
            index=models.Index(
                fields=["incident"], name="incident_up_inciden_8bb241_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="incidentupdate",
            index=models.Index(
                fields=["created_at"], name="incident_up_created_f6bc89_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="mediaaccess",
            index=models.Index(
                fields=["media_house"], name="media_acces_media_h_ee9f76_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="mediaaccess",
            index=models.Index(
                fields=["incident"], name="media_acces_inciden_cf4b7b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="mediaaccess",
            index=models.Index(
                fields=["accessed_at"], name="media_acces_accesse_e03f9f_idx"
            ),
        ),
    ]
